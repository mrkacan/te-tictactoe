{"version":3,"sources":["assets/image/logo.png","utils/helper.js","components/Square.js","components/Board.js","components/Header.js","pages/Game/Game.js","utils/storage.js","pages/RegisterUser/RegisterUser.js","pages/CreateOrJoinRoom/CreateOrJoinRoom.js","components/UserInfo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","calculateWinner","squares","lines","i","length","a","b","c","Box","posed","div","hidden","scale","opacity","visible","transition","ease","duration","default","Square","props","className","isMyTurn","onClick","pose","value","Board","this","renderSquare","React","Component","Header","src","logo","isLoading","Game","currentUserId","gameConfig","nextPlayer","isItMyRoom","ownerId","getOtherPlayer","otherPlayerId","otherPlayer","console","log","getNextPlayer","getWinnerName","state","X","O","isGameFineshed","Y","Winner","ownerWin","otherPlayerWin","history","Array","fill","stepNumber","xIsNext","xWantPlay","yWantPlay","setState","updateGame","newSquares","status","roomId","winner","handleClick","defaultProps","setItem","key","item","localStorage","JSON","stringify","getItem","retrievedItem","parse","removeItem","clear","then","RegisterUser","checkUser","useState","userId","setUserId","size","placeholder","onChange","e","target","toLowerCase","spellCheck","autoFocus","type","block","CreateOrJoinRoom","checkRoom","setRoomId","number","max","disabled","UserInfo","logout","currentRoom","charAt","toUpperCase","defaultGameState","App","LocalStorage","isRegistered","runGameListeners","registerUser","firebase","database","ref","once","snapshot","val","message","error","update","userActive","gameConfigDefault","gameConfigSnapshot","success","info","prevState","on","willDispatchObject","appIsRunning","setTimeout","bind","window","addEventListener","vh","innerHeight","document","documentElement","style","setProperty","isRoomOwner","Boolean","location","hostname","match","Content","Layout","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.28693d6e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7f18492e.png\";","export function calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n","import React from 'react';\nimport posed from 'react-pose';\n\nconst Box = posed.div({\n    hidden: {\n        scale: 0,\n        opacity: 0\n    },\n    visible: {\n        scale: 1,\n        opacity: 1,\n        transition: {\n            opacity: { ease: 'easeOut', duration: 300 },\n            default: { ease: 'linear', duration: 500 }\n        }\n    }\n});\n\nfunction Square(props) {\n    return (\n            <button\n\n                className={`square ${props.isMyTurn ? 'te-my-turn' : ''}`} onClick={props.onClick}>\n                <Box\n                    pose={(props.value === 'X' || props.value === 'O') ? 'visible' : 'hidden'}\n                >\n                    {props.value}\n                </Box>\n            </button>\n    );\n}\n\nexport default Square;\n","import React from 'react';\nimport Square from \"./Square\";\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        return (\n            <Square\n                isMyTurn={this.props.isMyTurn}\n                value={this.props.squares[i]}\n                onClick={() => this.props.onClick(i)}\n            />\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Board;\n","import React from 'react';\nimport logo from '../assets/image/logo.png';\nimport {Spin} from \"antd\";\n\nfunction Header(props) {\n    return (\n        <div className=\"te-logo-header\">\n            <div>\n                <img className=\"te-logo\" src={logo}/>\n            </div>\n            <div>\n                {\n                    props.isLoading && <Spin/>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport {calculateWinner} from \"../../utils/helper\";\nimport Board from \"../../components/Board\";\nimport Header from \"../../components/Header\";\nimport {Button} from \"antd\";\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            X: '',\n            Y: '',\n            ownerId: '',\n            otherPlayerId: '',\n            Winner: '',\n            ownerWin: 0,\n            otherPlayerWin: 0,\n            nextPlayer: '',\n            history: new Array(9).fill(null),\n            stepNumber: 0,\n            xIsNext: true,\n            isLoading: false,\n            xWantPlay: true,\n            yWantPlay: true\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const {gameConfig: {history}, updateGame, gameConfig, yWantPlay} = props\n\n        if(gameConfig && history){\n            const winner = calculateWinner(history);\n            if (!!winner) {\n                updateGame({\n                    xWantPlay: false,\n                    yWantPlay: false\n                })\n            }\n        }\n\n        console.log('props.gameConfig',props.gameConfig)\n        return {...props.gameConfig}\n    }\n\n    componentDidMount() {\n        const {gameConfig} = this.props\n\n        this.setState({\n            ...this.state,\n            ...gameConfig\n        })\n    }\n\n    handleClick(i) {\n        const {history} = this.state\n        const {updateGame, gameConfig: {X}, currentUserId} = this.props\n\n        console.log('history', history)\n        console.log('this.isMyTurn()', this.isMyTurn())\n        let newSquares = {...history}\n\n        if (!this.isMyTurn() || (calculateWinner(history) || history[i])) {\n            return;\n        }\n        newSquares[i] = X === currentUserId ? \"X\" : \"O\";\n        this.setState({\n            history: newSquares,\n        }, () => {\n            updateGame({\n                history: newSquares,\n                nextPlayer: this.getOtherPlayer()\n            })\n        });\n    }\n\n    isMyTurn = () => {\n        const {currentUserId} = this.props;\n        const {gameConfig: {nextPlayer}} = this.props;\n\n        return nextPlayer === currentUserId\n    }\n\n    isItMyRoom = () => {\n        const {currentUserId} = this.props;\n        const {gameConfig: {ownerId}} = this.props;\n\n        return ownerId === currentUserId\n    }\n\n    getOtherPlayer = () => {\n        const {currentUserId} = this.props;\n        const {gameConfig: {ownerId, otherPlayerId}} = this.props;\n        let otherPlayer = ''\n\n        if (currentUserId === ownerId) {\n            otherPlayer = otherPlayerId\n        }\n\n        if (currentUserId === otherPlayerId) {\n            otherPlayer = ownerId\n        }\n\nconsole.log('ownerId',ownerId)\nconsole.log('otherPlayerId',otherPlayerId)\nconsole.log('currentUserId',currentUserId)\n\n\n        return otherPlayer\n    }\n\n\n    getNextPlayer = () => {\n        const {gameConfig: {nextPlayer}} = this.props;\n\n        return nextPlayer ? nextPlayer : ''\n    }\n\n    getWinnerName = (state) => {\n        const {gameConfig: {X, O}} = this.props;\n\n        return state === 'X' ? X : O\n    }\n\n    isGameFineshed = () => {\n\n        return false\n    }\n\n    render() {\n        const {isLoading, history, ownerWin} = this.state\n        const {gameConfig, currentUserId, roomId, updateGame} = this.props\n\n        const winner = calculateWinner(history);\n        const isMyTurn = this.isMyTurn()\n        const isItMyRoom = this.isItMyRoom()\n        const nextPlayer = this.getNextPlayer()\n        const isGameFineshed = winner || this.isGameFineshed()\n\n        if (!gameConfig) {\n            return <Header isLoading={true}/>\n        }\n\n        let status;\n        if (winner) {\n            status = \"Winner: \" + winner;\n        } else {\n            status = \"Next player: \" + nextPlayer;\n        }\n\n        if(isGameFineshed){\n            status = \"Game has finished. Waiting for room owner for start game.\"\n        }\n\n        return (\n            <>\n                <div className=\"game\">\n                    {\n                        !isLoading ? <div className=\"game-board\">\n                            <Board\n                                squares={history}\n                                onClick={i => this.handleClick(i)}\n                                isMyTurn={isMyTurn}\n                            />\n                        </div> : <Header isLoading={true}/>\n                    }\n                </div>\n                <div>\n                    {\n                        !isLoading ? <div className=\"game-info\">\n                            <div>{status}</div>\n                        </div> : null\n                    }\n                </div>\n                { !isGameFineshed &&\n                    <h3 className=\"m-4 text-center\">\n                        {isMyTurn ? 'Your Turn!' : 'Waiting opponent.'}\n                    </h3>\n                }\n                {\n                    isItMyRoom && <Button onClick={() => updateGame({history: []})}>\n                        Start Again\n                    </Button>\n                }\n                {\n                    winner && <h1>\n                        {`WINNER ${this.getWinnerName(winner)}!`}\n                    </h1>\n                }\n            </>\n        );\n    }\n}\n\nGame.defaultProps = {\n    gameConfig: {\n        X: '',\n        Y: '',\n        ownerId: '',\n        otherPlayerId: '',\n        Winner: '',\n        ownerWin: 0,\n        otherPlayerWin: 0,\n        nextPlayer: ''\n    }\n}\n\nexport default Game;\n","export default {\n  setItem: async function setItem(key, item) {\n    try {\n      return await localStorage.setItem(key, JSON.stringify(item))\n    } catch (error) {}\n  },\n  getItem: async function getItem(key) {\n    try {\n      const retrievedItem = await localStorage.getItem(key)\n      return JSON.parse(retrievedItem)\n    } catch (error) {}\n  },\n  removeItem: async function getItem(key) {\n    try {\n      return await localStorage.removeItem(key)\n    } catch (error) {}\n  },\n  clear: async () => {\n    try {\n      console.log('####_LOCAL_STORAGE_CLEARED_####')\n      return await localStorage.clear().then(() => {\n        return localStorage.setItem('isFirstTime', 'NO')\n      })\n    } catch (error) {}\n  },\n}\n","import React, {useState} from 'react';\nimport {Button, Input} from 'antd';\nimport LocalStorage from \"../../utils/storage\";\nimport Header from \"../../components/Header\";\n\nfunction RegisterUser({checkUser}) {\n    const [userId, setUserId] = useState('');\n    const onRegisterPress = () => {\n            checkUser(userId)\n    }\n\n\n    return (\n        <div className=\"te-register-form d-flex justify-content-center align-items-center\">\n            <div>\n                <Header/>\n                <Input\n                    size=\"large\"\n                    placeholder=\"username\"\n                    onChange={e => setUserId(e.target.value.toLowerCase())}\n                    className=\"text-center\"\n                    value={userId}\n                    spellCheck={false}\n                    autoFocus={true}\n                />\n                <Button\n                    className=\"mt-2\"\n                    type=\"primary\"\n                    block\n                    onClick={onRegisterPress}\n                >\n                    CONTINUE\n                </Button>\n            </div>\n        </div>\n    );\n}\n\nexport default RegisterUser;\n","import React, {useState} from 'react';\nimport {Button, Input} from 'antd';\nimport Header from \"../../components/Header\";\n\nfunction CreateOrJoinRoom({checkRoom}) {\n    const [roomId, setRoomId] = useState('');\n\n    const onJoinPress = () => {\n\n        if (roomId && roomId.length === 4) {\n            checkRoom(roomId)\n        }\n    }\n\n\n    const isNumberValid = (number) => {\n        return number === '' ? true : !!(number && number.length < 5);\n    }\n\n\n    return (\n        <div className=\"te-register-form d-flex justify-content-center align-items-center\">\n            <div>\n                <Header/>\n                <Input\n                    size=\"large\"\n                    placeholder=\"room id (4 digit)\"\n                    onChange={e => isNumberValid(e.target.value) && setRoomId(e.target.value)}\n                    className=\"text-center\"\n                    value={roomId}\n                    max={4}\n                    type=\"number\"\n                    autoFocus={true}\n                />\n                <Button\n                    disabled={roomId.length !== 4}\n                    className=\"mt-2\"\n                    type=\"primary\"\n                    block\n                    onClick={onJoinPress}\n                >\n                    JOIN & CREATE ROOM\n                </Button>\n            </div>\n        </div>\n    );\n}\n\nexport default CreateOrJoinRoom;\n","import {Avatar} from \"antd\";\nimport LogoutOutlined from \"@ant-design/icons/lib/icons/LogoutOutlined\";\nimport React from \"react\";\n\nfunction UserInfo({currentUserId, logout, currentRoom}) {\n    return (\n        <div className=\"d-flex justify-content-between align-items-center mb-4\">\n            <div className=\"d-flex align-items-center\">\n                <Avatar className=\"te-avatar\">\n                    {currentUserId.charAt(0).toUpperCase()}\n                </Avatar>\n                <div className=\"d-flex align-items-start flex-column\">\n                    <div className=\"te-active-user ml-2\">\n                        {'user: ' + currentUserId}\n                    </div>\n                    {currentRoom ?\n                    <div className=\"te-active-user ml-2\">\n                        {'room code: ' + currentRoom}\n                    </div>: null}\n                </div>\n            </div>\n            <div onClick={logout} className=\"cursor-pointer te-logout\">\n                Logout <LogoutOutlined size={\"medium\"}/>\n            </div>\n        </div>\n    );\n}\n\nexport default UserInfo;\n","import React from 'react';\nimport './styles/styles.css';\nimport firebase from \"firebase\";\nimport Game from \"./pages/Game/Game\";\nimport RegisterUser from \"./pages/RegisterUser/RegisterUser\";\nimport LocalStorage from \"./utils/storage\";\nimport CreateOrJoinRoom from \"./pages/CreateOrJoinRoom/CreateOrJoinRoom\";\nimport UserInfo from \"./components/UserInfo\";\nimport {message} from \"antd\";\nimport Header from \"./components/Header\";\n\nconst defaultGameState = {\n    X: '',\n    O: '',\n    ownerId: '',\n    otherPlayerId: '',\n    Winner: '',\n    ownerWin: 0,\n    otherPlayerWin: 0,\n    nextPlayer: '',\n    history: new Array(9).fill(null),\n    stepNumber: 0,\n    xIsNext: true,\n    xWantPlay: true,\n    yWantPlay: true,\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isRegistered: false,\n            currentUserId: null,\n            currentRoom: null,\n            gameConfig: {\n                ...defaultGameState\n            },\n            isLoading: true,\n            appIsRunning: false\n        }\n    }\n\n    componentDidMount() {\n        setTimeout(function () {\n            this.checkUser()\n        }.bind(this), 1500)\n\n        window.addEventListener('resize', () => {\n            // We execute the same script as before\n            let vh = window.innerHeight * 0.01;\n            document.documentElement.style.setProperty('--vh', `${vh}px`);\n        });\n\n\n    }\n\n    checkUser = () => {\n        LocalStorage.getItem('userId').then((currentUserId) => {\n            LocalStorage.getItem('currentRoom').then((currentRoom) => {\n                if (currentUserId) {\n                    this.setState({\n                        currentUserId,\n                        isRegistered: true,\n                        currentRoom,\n                    })\n                }\n\n                if (currentRoom && currentUserId) {\n                    this.runGameListeners()\n                }\n\n                this.setState({\n                    isLoading: false\n                })\n            })\n        })\n    }\n\n    registerUser = (currentUserId) => {\n        this.setState({\n            isLoading: true\n        })\n        firebase.database().ref(`users/${currentUserId}`).once('value', (snapshot) => {\n            let val = snapshot.val()\n\n            if (!val) {\n                firebase.database().ref(`users/${currentUserId}`).update({\n                    userActive: true\n                }).then(() => {\n                    LocalStorage.setItem('userId', currentUserId).then(() => {\n                        this.setState({\n                            currentUserId,\n                            isRegistered: true,\n                            currentRoom: null,\n                            isLoading: false\n                        })\n                    })\n                })\n            } else {\n                message.error('This user already exist. Please try with other username')\n                this.setState({\n                    isLoading: false,\n                })\n            }\n        })\n    }\n\n    checkRoom = (currentRoom) => {\n        const {currentUserId} = this.state\n\n        this.setState({\n            isLoading: true\n        })\n\n        firebase.database().ref(`rooms/${currentRoom}`).once('value', (snapshot) => {\n            let val = snapshot.val()\n            const gameConfigDefault = {\n                ...defaultGameState,\n                X: currentUserId,\n                ownerId: currentUserId,\n                nextPlayer: currentUserId\n            }\n\n            if (!val) {\n                firebase.database().ref(`rooms/${currentRoom}`).update(gameConfigDefault).then(() => {\n                    LocalStorage.setItem('currentRoom', currentRoom).then(() => {\n                        this.setState({\n                            currentRoom,\n                            gameConfig: gameConfigDefault,\n                            isLoading: false,\n                        })\n                        message.info('Room successfully created. Share your codes for join.\\n' + `Your code: ${currentRoom}`)\n                    })\n                })\n            } else {\n                firebase.database().ref(`rooms/${currentRoom}`).once('value', (gameConfigSnapshot) => {\n                    firebase.database().ref(`rooms/${currentRoom}`).update({\n                        otherPlayerId: currentUserId,\n                        O: currentUserId\n                    }).then(()=> {\n                        LocalStorage.setItem('currentRoom', currentRoom).then(() => {\n                            this.setState({\n                                currentRoom,\n                                gameConfig:gameConfigSnapshot.val(),\n                                isLoading: false,\n                            })\n                            message.success('Successfully joined.')\n                        })\n                    })\n                })\n            }\n        })\n    }\n\n    logout = () => {\n        LocalStorage.removeItem('userId').then(() => {\n            LocalStorage.removeItem('currentRoom').then(() => {\n                this.setState({\n                    currentUserId: null,\n                    isRegistered: false,\n                    currentRoom: null,\n                })\n            })\n\n        })\n    }\n\n    runGameListeners = () => {\n        LocalStorage.getItem('userId').then((currentUserId) => {\n            LocalStorage.getItem('currentRoom').then((currentRoom) => {\n                if (currentUserId && currentRoom) {\n                    this.setState({\n                        currentUserId,\n                        isRegistered: true,\n                        currentRoom,\n                    })\n\n                    firebase.database().ref(`rooms/${currentRoom}`).once('value', (gameConfigSnapshot) => {\n                        const gameConfig = gameConfigSnapshot.val()\n\n                        this.setState(prevState => ({\n                            ...prevState,\n                            gameConfig: {\n                                ...prevState.gameConfig,\n                                ...gameConfig,\n                                history: (gameConfig.history ? gameConfig.history : new Array(9).fill(null))\n                            }\n                        }))\n                    })\n\n                    firebase.database().ref(`rooms/${currentRoom}`).on('child_changed', (gameConfigSnapshot) => {\n                        const gameConfig = gameConfigSnapshot\n                        console.log('gameConfig',gameConfig)\n                        this.setState(prevState => ({\n                            ...prevState,\n                            gameConfig: {\n                                ...prevState.gameConfig,\n                                [gameConfig.key]: gameConfig.val()\n                            }\n                        }))\n                    })\n\n                    firebase.database().ref(`rooms/${currentRoom}`).on('child_added', (gameConfigSnapshot) => {\n                        const gameConfig = gameConfigSnapshot\n\n                        this.setState(prevState => ({\n                            ...prevState,\n                            gameConfig: {\n                                ...prevState.gameConfig,\n                                [gameConfig.key]: gameConfig.val()\n                            }\n                        }))\n                    })\n\n                    firebase.database().ref(`rooms/${currentRoom}/history`).on('child_removed', (gameConfigSnapshot) => {\n\n                        this.setState(prevState => ({\n                            ...prevState,\n                            gameConfig: {\n                                ...prevState.gameConfig,\n                                history: []\n                            }\n                        }))\n                    })\n\n                }\n            })\n        })\n    }\n\n    updateGame = (willDispatchObject) => {\n        const {currentRoom} = this.state\n\n        firebase.database().ref(`rooms/${currentRoom}`).update(willDispatchObject)\n    }\n\n    render() {\n        const {\n            isRegistered,\n            currentUserId,\n            currentRoom,\n            roomId,\n            gameConfig,\n            isLoading\n        } = this.state;\n\n        if (isLoading) {\n            return <Header isLoading={isLoading}/>\n        }\n\n        if (!isRegistered) {\n            return <RegisterUser checkUser={this.registerUser}/>\n        }\n\n\n        if (!currentRoom) {\n            return <>\n                <UserInfo\n                    currentUserId={currentUserId}\n                    logout={this.logout}\n                />\n                <CreateOrJoinRoom\n                    checkRoom={this.checkRoom}/>\n            </>\n        }\n\n\n        return (\n            <>\n                <UserInfo\n                    currentUserId={currentUserId}\n                    currentRoom={currentRoom}\n                    logout={this.logout}\n                />\n                <Game\n                    currentUserId={currentUserId}\n                    roomId={roomId}\n                    gameConfig={gameConfig}\n                    isRoomOwner={gameConfig && gameConfig.ownerId === currentUserId}\n                    updateGame={this.updateGame}\n                />\n            </>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Layout} from \"antd\";\nimport 'antd/dist/antd.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport firebase from \"firebase\";\n\nconst {Content} = Layout;\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDQtpaeFhvUUeUtUUxA4xlDaEzDiSo7fHc\",\n    authDomain: \"te-tictactoe.firebaseapp.com\",\n    databaseURL: \"https://te-tictactoe.firebaseio.com\",\n    projectId: \"te-tictactoe\",\n    storageBucket: \"te-tictactoe.appspot.com\",\n    messagingSenderId: \"478023561910\",\n    appId: \"1:478023561910:web:81e0297885e6397316ec17\",\n    measurementId: \"G-LB8CWZC46J\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Layout className=\"layout te-game-layout\">\n            <Content className=\"te-game-content\">\n                <div className=\"site-layout-content\">\n                    <App/>\n                </div>\n            </Content>\n        </Layout>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}